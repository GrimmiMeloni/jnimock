# A sample Makefile for building jnimock and using them in user tests. 
# Please tweak it to suit your environment and project. 
# You may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.
#

# Points to the root of gmock
GMOCK_DIR = 

# Points to the root of gtest
GTEST_DIR = $(GMOCK_DIR)/gtest

# Points to the root of jnimock
JNIMOCK_DIR = ..

# Where to find JNI testing example code
SAMPLES_DIR = ../samples


# Sepecify the cross-compile toolchain prefix
CROSS_PREFIX = 

CXX = $(CROSS_PREFIX)g++
GCC = $(CROSS_PREFIX)gcc

# Flags passed to the preprocessor.
# Set gtest, gmock and jnimock's header directories as system directories, 
# such that the compiler doesn't generate warnings in these headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -isystem $(GMOCK_DIR)/include -isystem $(JNIMOCK_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.
TEST = jni_example_test

# All gtest headers. Usually you shouldn't change this definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# All gmock headers. Note that all gtest headers are
# included here too, as they are #included gmock headers.
# Usually you shouldn't change this definition.	
GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h \
                $(GTEST_HEADERS)

# All jnimock headers
JNIMOCK_HEADERS = $(JNIMOCK_DIR)/include/jnimock/*.h $(GMOCK_HEADERS)


all : jnimock.a jnimock_main.a $(TEST)


clean :
	rm -f $(TEST) jnimock.a jnimock_main.a *.o

# Optial targets for installing/uninsalling and running the example tests 
# on android devices. You can fix them to meet your project's needs.
install : $(TEST)
	adb shell mkdir -p /sdcard/unittest
	adb push $(TEST) /sdcard/unittest
	adb shell chmod 777 /sdcard/unittest/$(TEST)

run : install
	adb shell /sdcard/unittest/$(TEST)

uninstall :
	adb shell rm -r /sdcard/unittest

# Builds gtest and gmock.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)
GMOCK_SRCS_ = $(GMOCK_DIR)/src/*.cc $(GMOCK_HEADERS)
JNIMOCK_SRCS_ = $(JNIMOCK_DIR)/src/*.cpp

# For simplicity and to avoid depending on implementation details of gmock and gtest, 
# the dependencies specified below are conservative and not optimized.  This is fine 
# as gmock and gtest compile fast and for ordinary users their source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GTEST_DIR)/src/gtest-all.cc

gmock-all.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GMOCK_DIR)/src/gmock-all.cc

gmock_main.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GMOCK_DIR)/src/gmock_main.cc

# Builds jnimock.
jnimock.o : $(JNIMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) -I$(JNIMOCK_DIR) $(CXXFLAGS) \
			-c $(JNIMOCK_DIR)/src/jnimock.cpp

jnimock.a : jnimock.o gmock-all.o gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

jnimock_main.a : jnimock.o gmock-all.o gtest-all.o gmock_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.
jni_example_test.o : $(SAMPLES_DIR)/jni_example_test.cpp $(JNIMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SAMPLES_DIR)/jni_example_test.cpp

jni_c_example.o : $(SAMPLES_DIR)/jni_c_example.c $(JNIMOCK_HEADERS)
	$(GCC) $(CPPFLAGS) $(CXXFLAGS) -c $(SAMPLES_DIR)/jni_c_example.c

jni_cpp_example.o : $(SAMPLES_DIR)/jni_cpp_example.cpp $(JNIMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SAMPLES_DIR)/jni_cpp_example.cpp

jni_example_test : jni_example_test.o jni_c_example.o jni_cpp_example.o jnimock_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@

